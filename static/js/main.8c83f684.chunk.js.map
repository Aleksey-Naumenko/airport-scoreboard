{"version":3,"sources":["images/logo-airport.png","flights/redux/flights.selectors.js","flights/components/FlightsList.jsx","flights/components/SearchBody.jsx","flights/components/SearchField.jsx","flights/redux/flights.actions.js","flights/redux/flightsGateway.js","header/Header.jsx","footer/Footer.jsx","flights/redux/flights.reducer.js","store.js","App.jsx","index.jsx"],"names":["module","exports","getDepartureListSelector","createSelector","state","flightsList","flightsData","departure","dataList","slice","filter","flight","Date","timeDepShedule","getDate","getArrivalListSelector","arrival","timeLandCalc","connect","departureList","flightsSelectors","arrivalList","useParams","direction","fltNo","listToRender","newList","className","length","style","map","shedule","destination","depArr","timeTakeofFact","styles","term","key","ID","moment","format","status","src","airline","en","logoSmallName","alt","name","SearchBody","location","useLocation","isActiveBtn","pathname","includes","isActiveDeparture","to","icon","faPlaneDeparture","faPlaneArrival","mapDispatch","setList","date","newDate","dispatch","fetch","then","response","ok","json","Error","fetchFlightsData","type","payload","setFlightList","body","useState","searchText","setSearchText","history","useHistory","useEffect","push","onSubmit","e","preventDefault","faSearch","value","onChange","target","placeholder","Header","logo","Footer","defaultState","flightsReducer","action","reducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8c83f684.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-airport.2d2c20bb.png\";","import { createSelector } from 'reselect';\r\n\r\nexport const flightsDataSelector = state => state.flightsList.flightsData;\r\nexport const departureListSelector = state => state.flightsList.flightsData.departure;\r\nexport const arrivalListSelector = state => state.flightsList.flightsData.arrival;\r\n\r\nexport const getDepartureListSelector = createSelector(\r\n    [departureListSelector],\r\n    (dataList) => {\r\n        if (dataList) {\r\n            return dataList\r\n            .slice()\r\n            .filter(flight =>\r\n                new Date(flight.timeDepShedule).getDate() === new Date().getDate());\r\n        }\r\n        return [];\r\n    }\r\n);\r\n\r\nexport const getArrivalListSelector = createSelector(\r\n    [arrivalListSelector],\r\n    (dataList) => {\r\n        if (dataList) {\r\n            return dataList\r\n                .slice()\r\n                .filter(flight => new Date(flight.timeLandCalc).getDate() === new Date().getDate());\r\n        }\r\n        return [];\r\n    }\r\n);","import React from 'react';\r\nimport '../flightsList.scss';\r\nimport { connect } from 'react-redux';\r\nimport * as flightsSelectors from '../redux/flights.selectors';\r\nimport moment from 'moment';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst FlightsList = ({ departureList, arrivalList }) => {\r\n    let { direction, fltNo } = useParams();\r\n\r\n    let listToRender = [];\r\n\r\n    if (direction === 'arrivals') {\r\n        listToRender = arrivalList;\r\n    } else {\r\n        listToRender = departureList;\r\n    }\r\n\r\n    if (fltNo && listToRender) {\r\n        const newList = listToRender.filter(flight => `${flight['carrierID.IATA']}${flight.fltNo}` === fltNo);\r\n        listToRender = newList;\r\n    }\r\n\r\n    return (\r\n        <ul className=\"list\">\r\n            {\r\n                listToRender.length === 0 ?\r\n                    <li style={{ \"listStyleType\": \"none\" }}>\r\n                        <div className=\"no-flights\" >No flights</div>\r\n                    </li> :\r\n                    listToRender.map(flight => {\r\n                        const shedule = flight.timeLandCalc || flight.timeDepShedule;\r\n                        const destination = flight['airportFromID.name_en'] || flight['airportToID.name_en'];\r\n                        const depArr = flight.timeLandCalc || flight.timeTakeofFact;\r\n                        const styles = flight.term === 'A' ?\r\n                            'terminal-a' : 'terminal-d';\r\n                        return (\r\n                            <li key={flight.ID} className=\"list__item\">\r\n                                <div className=\"list__item-terminal\"><div className={styles}><span>{flight.term}</span></div></div>\r\n                                <span className=\"list__item-shedule\">{`${moment(shedule).format('HH:mm')}`}</span>\r\n                                <span className=\"list__item-destination\">{destination}</span>\r\n                                <span className=\"list__item-status\">\r\n                                    {flight.status === 'CX' ?\r\n                                        'Canceled' :\r\n                                        `${`${moment(depArr).format('HH:mm')}`}`\r\n                                    }\r\n                                </span>\r\n                                <div className=\"list__item-airline\">\r\n                                    <img src={flight.airline.en.logoSmallName} alt=\"logo\" />\r\n                                    <span>\r\n                                        {flight.airline.en.name}\r\n                                    </span>\r\n                                </div>\r\n                                <span className=\"list__item-fltNo\">{`${flight['carrierID.IATA']}${flight.fltNo}`}</span>\r\n                            </li>\r\n                        )\r\n                    })\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nconst mapState = state => {\r\n    return {\r\n        departureList: flightsSelectors.getDepartureListSelector(state),\r\n        arrivalList: flightsSelectors.getArrivalListSelector(state),\r\n    };\r\n};\r\n\r\nexport default connect(mapState)(FlightsList);","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport '../searchBody.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlaneDeparture, faPlaneArrival } from '@fortawesome/free-solid-svg-icons';\r\nimport FlightsList from './FlightsList';\r\n\r\n\r\nconst SearchBody = () => {\r\n\r\n    const location = useLocation();\r\n\r\n    const isActiveBtn = location.pathname.includes('/arrivals') ?\r\n        'arrivals-btn btn active' : 'arrivals-btn btn';\r\n    const isActiveDeparture = location.pathname.includes('/departures') ?\r\n        'departures-btn btn active' : 'departures-btn btn';\r\n        \r\n    return (\r\n        <>\r\n            <div className=\"search-body__btn-container\">\r\n                <Link to=\"/departures\">\r\n                    <button\r\n                        className={isActiveDeparture}\r\n                        >\r\n                        <FontAwesomeIcon className=\"btn-icon\" icon={faPlaneDeparture} />\r\n                            Departures\r\n                        </button>\r\n                </Link>\r\n                <Link to=\"/arrivals\">\r\n                    <button\r\n                        className={isActiveBtn}\r\n                        >\r\n                        <FontAwesomeIcon className=\"btn-icon\" icon={faPlaneArrival} />\r\n                            Arrivals\r\n                        </button>\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"search-body\">\r\n                <div className=\"search-body__list\">\r\n                    <span className=\"list-title\">Terminal</span>\r\n                    <span className=\"list-title\">Local time</span>\r\n                    <span className=\"list-title\">Destination</span>\r\n                    <span className=\"list-title\">Status</span>\r\n                    <span className=\"list-title\">Airline</span>\r\n                    <span className=\"list-title\">Flight</span>\r\n                </div>\r\n            </div>\r\n\r\n            <FlightsList />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchBody;","import React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as flightsActions from '../redux/flights.actions';\r\nimport SearchBody from './SearchBody';\r\n\r\n\r\nconst SearchField = ({ setList }) => {\r\n\r\n    const [searchText, setSearchText] = useState('');\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    const { fltNo, direction } = useParams();\r\n\r\n    useEffect(() => {\r\n        if (searchText) {\r\n            history.push(`${location.pathname}/${searchText}`);\r\n        }\r\n    }, [direction]);\r\n\r\n    useEffect(() => {\r\n        setList();\r\n        if (searchText) setSearchText(fltNo);\r\n    }, []);\r\n\r\n    const onChange = e => {\r\n        const { value } = e.target;\r\n        setSearchText(value);\r\n    };\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (fltNo && searchText) {\r\n            return;\r\n        }\r\n\r\n        searchText ?\r\n            history.push(`${location.pathname}/${searchText}`) :\r\n            history.push(`/${direction}`);\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"scoreboard__title\">Search Flight</h1>\r\n\r\n            <form onSubmit={onSubmit} className=\"scoreboard-form\">\r\n                <div className=\"scoreboard-form__icon\">\r\n                    <FontAwesomeIcon icon={faSearch} />\r\n                </div>\r\n                <input\r\n                    className=\"scoreboard-form__input\"\r\n                    type=\"text\"\r\n                    value={searchText}\r\n                    onChange={onChange}\r\n                    placeholder=\"Airline, destinayion or flight #\"\r\n                />\r\n                <button\r\n                    type=\"submit \"\r\n                    className=\"scoreboard-form__btn btn\"\r\n                >Find</button>\r\n            </form>\r\n\r\n            <SearchBody />\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapDispatch = {\r\n    setList: flightsActions.getFlightList\r\n};\r\n\r\nexport default connect(null, mapDispatch)(SearchField);","import { fetchFlightsData } from './flightsGateway';\r\nimport moment from 'moment';\r\n\r\nexport const SET_FLIGHTS_LIST = 'SET_FLIGHTS_LIST';\r\n\r\nexport const setFlightList = flightsData => {\r\n    return {\r\n        type: SET_FLIGHTS_LIST,\r\n        payload: {\r\n            flightsData,\r\n        }\r\n    };\r\n};\r\n\r\nexport const getFlightList = () => {\r\n    const date = new Date();\r\n    const newDate = moment(date).format('DD-MM-YYYY');\r\n    return (dispatch) => {\r\n        fetchFlightsData(newDate)\r\n            .then(flightsData => dispatch(setFlightList(flightsData.body)))\r\n    }\r\n};","const baseUrl = 'https://api.iev.aero/api/flights';\r\n\r\nexport const fetchFlightsData = date => {\r\n    return fetch(`${baseUrl}/${date}`)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            };\r\n            throw new Error('Failed to Fetch!!');\r\n        })\r\n};","import React from 'react';\r\nimport './header.scss';\r\nimport logo from '../images/logo-airport.png';\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <header className=\"header\">\r\n            <div className=\"header-logo\">\r\n                <img className=\"header-logo__img\" src={logo} alt=\"Logo\"/>\r\n            </div>\r\n            <nav className=\"header-nav\">\r\n                <div className=\"header-nav__btn\">For passengers</div>\r\n                <div className=\"header-nav__btn\">IEV services</div>\r\n                <div className=\"header-nav__btn\">VIP</div>\r\n                <div className=\"header-nav__btn\">Partnership</div>\r\n                <div className=\"header-nav__btn\">UA</div>\r\n            </nav>\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Header;\r\n","import React from 'react';\r\nimport './footer.scss';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"footer-container\">\r\n                <h3 className=\"footer-container__title\">For passengers</h3>\r\n                <span className=\"footer-container__item\">Flight schedule</span>\r\n                <span className=\"footer-container__item\">Ordering services</span>\r\n                <span className=\"footer-container__item\">Contact information</span>\r\n                <span className=\"footer-container__item\">Site map</span>\r\n            </div>\r\n            <div className=\"footer-container\">\r\n                <h3 className=\"footer-container__title\">Partnership</h3>\r\n                <span className=\"footer-container__item\">Main</span>\r\n                <span className=\"footer-container__item\">Airport features</span>\r\n                <span className=\"footer-container__item\">Training center</span>\r\n                <span className=\"footer-container__item\">Vacancies</span>\r\n            </div>\r\n            <div className=\"footer-container\">\r\n                <h3 className=\"footer-container__title\">Make us a call</h3>\r\n                <span className=\"footer-container__item\">+38 (800) 900 900</span>\r\n                <span className=\"footer-container__item\">Ordering services</span>\r\n                <span className=\"footer-container__item\">Contact information</span>\r\n                <span className=\"footer-container__item\">Site map</span>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import {SET_FLIGHTS_LIST } from './flights.actions';\r\n\r\nconst defaultState = {\r\n    flightsData: [],\r\n};\r\n\r\nconst flightsReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_FLIGHTS_LIST: \r\n            return {\r\n                ...state,\r\n                flightsData: action.payload.flightsData,\r\n            };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default flightsReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport flightsReducer from './flights/redux/flights.reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst reducer = combineReducers({\r\n    flightsList: flightsReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk),\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport SearchField from './flights/components/SearchField';\r\nimport Header from './header/Header';\r\nimport Footer from './footer/Footer';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <div className=\"page\">\r\n                <Router>\r\n                    <Header />\r\n\r\n                    <Switch>\r\n                        <Route path=\"/:direction?/:fltNo?\">\r\n                            <SearchField />\r\n                        </Route>\r\n                    </Switch>\r\n\r\n                    <Footer />\r\n                </Router>\r\n            </div>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}